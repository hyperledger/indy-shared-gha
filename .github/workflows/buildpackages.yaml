name: "Build Packages"

on:
  workflow_call:
    inputs:

      UBUNTU_VERSION:
        required: true
        type: string
      isDev:
        required: true
        type: string
      isRC:
        required: true
        type: string
      moduleName:
        required: true
        type: string
      DOCKER_IMAGE:
        required: true
        type: string

jobs:

  # hyperledger/indy-shared-gha/.github/actions/set-version uses timestamps for development package versioning.
  # Make sure the version is only calculated once for consistency.
  set-version:
    name: Set Version
    runs-on: ubuntu-20.04
    container:
      image: ${{ inputs.DOCKER_IMAGE }}
    outputs:
      upstreamVer: ${{ steps.version.outputs.upstreamVer }}
      pkgVer: ${{ steps.version.outputs.pkgVer }}
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Set Build Version
        id: version
        uses:  hyperledger/indy-shared-gha/.github/actions/set-version@v1
        with:
          moduleName: ${{ inputs.moduleName }}
          isDev: ${{ inputs.isDev }}
          isRC: ${{ inputs.isRC }}

  build-release:
    name: Build Release
    needs: [set-version]
    runs-on: ubuntu-20.04
    env:
      UBUNTU_VERSION: ${{ inputs.UBUNTU_VERSION }}
    container:
      image: ${{ inputs.DOCKER_IMAGE }}
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Build Deployment Package
        run: |
          mkdir -p /tmp/${{ inputs.moduleName }}-build
          ls -last $GITHUB_WORKSPACE/build-scripts/${{ env.UBUNTU_VERSION }}/
          $GITHUB_WORKSPACE/build-scripts/${{ env.UBUNTU_VERSION }}/build-${{ inputs.moduleName }}.sh $GITHUB_WORKSPACE "${{ needs.set-version.outputs.upstreamVer }}" "/tmp/${{ inputs.moduleName }}-build" "${{ needs.set-version.outputs.pkgVer }}"

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.moduleName }}-deb
          path: /tmp/${{ inputs.moduleName }}-build
          retention-days: 5

  build-python-packages:
    name: Build Python Packages
    needs: [set-version]
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install required packages via pip
        run: |
          python3 -m pip install pytest-runner wheel

      - name: Set Build Version
        id: version
        uses: hyperledger/indy-shared-gha/.github/actions/set-version@v1
        with:
          moduleName: ${{ inputs.moduleName }}
          isDev: ${{ inputs.isDev }}
          isRC: ${{ inputs.isRC }}

      - name: Prepare package and set version
        run: |
          $GITHUB_WORKSPACE/build-scripts/${{ inputs.UBUNTU_VERSION }}/prepare-package.sh $GITHUB_WORKSPACE/ ${{ inputs.moduleName }} "${{ needs.set-version.outputs.upstreamVer }}" python-packages

      - name: Building python package
        run: |
          python3 setup.py sdist --dist-dir /tmp/dist bdist_wheel --dist-dir /tmp/dist

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.moduleName }}-python
          path: /tmp/dist
          retention-days: 5

  build-3rd-party-dependencies:
    name: Build 3rd Party Dependencies
    runs-on: ubuntu-20.04
    env:
      UBUNTU_VERSION: ${{ inputs.UBUNTU_VERSION }}
    container:
      image: ${{ inputs.DOCKER_IMAGE }}
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Try load from cache.
        id: third-party-dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/third-party-dependencies
          key: ${{ format('third-party-dependencies-{0}', hashFiles(format('./build-scripts/{0}/build-3rd-parties.sh', inputs.UBUNTU_VERSION ))) }}           

      - name: Build 3rd party deployment packages
        if: steps.third-party-dependencies.outputs.cache-hit != 'true'
        run: |
          mkdir -p $GITHUB_WORKSPACE/build-scripts/${{ inputs.UBUNTU_VERSION }}/cache/3rd-party-dependencies/
          $GITHUB_WORKSPACE/build-scripts/${{ inputs.UBUNTU_VERSION }}/build-3rd-parties.sh ./cache/3rd-party-dependencies
          mv $GITHUB_WORKSPACE/build-scripts/${{ inputs.UBUNTU_VERSION }}/cache/* /tmp/third-party-dependencies
      
      - uses: actions/upload-artifact@v3
        with:
          name: third-party-dependencies
          path: /tmp/third-party-dependencies
          retention-days: 5